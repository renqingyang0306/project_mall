<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cskaoyan.project.mall.mapper.GoodsMapper">
    <resultMap id="BaseResultMap" type="com.cskaoyan.project.mall.domain.Goods">
        <id column="id" jdbcType="VARCHAR" property="id" />
        <result column="name" jdbcType="VARCHAR" property="name" />
        <result column="category_id" jdbcType="VARCHAR" property="categoryId" />
        <result column="brand_id" jdbcType="VARCHAR" property="brandId" />
        <result column="gallery" jdbcType="VARCHAR" property="gallery" />
        <result column="keywords" jdbcType="VARCHAR" property="keywords" />
        <result column="brief" jdbcType="VARCHAR" property="brief" />
        <result column="is_on_sale" jdbcType="VARCHAR" property="isOnSale" />
        <result column="sort_order" jdbcType="VARCHAR" property="sortOrder" />
        <result column="pic_url" jdbcType="VARCHAR" property="picUrl" />
        <result column="share_url" jdbcType="VARCHAR" property="shareUrl" />
        <result column="is_new" jdbcType="VARCHAR" property="isNew" />
        <result column="is_hot" jdbcType="VARCHAR" property="isHot" />
        <result column="unit" jdbcType="VARCHAR" property="unit" />
        <result column="counter_price" jdbcType="VARCHAR" property="counterPrice" />
        <result column="retail_price" jdbcType="VARCHAR" property="retailPrice" />
        <result column="detail" jdbcType="VARCHAR" property="detail" />
        <result column="add_time" jdbcType="VARCHAR" property="addTime" />
        <result column="update_time" jdbcType="VARCHAR" property="updateTime" />
        <result column="deleted" jdbcType="VARCHAR" property="deleted" />
        <result column="goods_sn" jdbcType="VARCHAR" property="goodsSn" />
    </resultMap>

    <sql id="Base_Column_List">
        id,goods_sn,`name`,category_id,brand_id,
        gallery,keywords,brief,is_on_sale,sort_order,pic_url,share_url,
        is_new,is_hot,unit,counter_price,retail_price,detail,add_time,
        update_time,deleted
    </sql>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="WxGoods_Column_List">
        brief,counter_price,id,is_hot,is_new,name,pic_url,retail_price
    </sql>

    <!--getListRecord-->
    <select id="getListRecord"  resultMap="BaseResultMap">
        select  <include refid="Base_Column_List"/>
        from goods
        where  id like "%" #{goodsId} "%"
        order by #{sort}  #{order}
    </select>

    <select id="getPageBrandsGoodsByIds"  resultMap="BaseResultMap">
        select  <include refid="Base_Column_List"/>
        from goods
        <where>
             <if test="isNew!=null">
              and   is_new = #{isNew}
            </if>
            <if test="categoryId!=0">
             and   category_id = #{categoryId}
            </if>
            <if test="keyword!=null">
                and (keywords like "%"#{keyword}"%"
                or name like "%"#{keyword}"%")
            </if>
        </where>
        <if test="sort!=null and order!=null">
            order by ${sort} ${order}
        </if>
    </select>
    <select id="getPageBrandsGoodsById"  resultMap="BaseResultMap">
        select  <include refid="Base_Column_List"/>
        from goods
        where brand_id = #{brandId}
    </select>

    <select id="queryAll" resultMap="BaseResultMap">
      select
      <include refid="Base_Column_List"/>
      from goods
    </select>
    <select id="fuzzyQuery" resultMap="BaseResultMap">
      select
      <include refid="Base_Column_List"/>
      from goods
      where goods_sn like #{goodsSn} and `name` like #{name}
    </select>
    <!--查询一条goods信息-->
    <select id="queryById" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from goods
        where id = #{id}
    </select>

    <select id="countByExample" parameterType="com.cskaoyan.project.mall.domain.GoodsExample" resultType="java.lang.Long">
        select count(*) from goods
        <if test="_parameter != null">
            <include refid="Example_Where_Clause" />
        </if>
    </select>

    <insert id="insert" keyProperty="id" useGeneratedKeys="true">
        insert into goods
        (goods_sn,`name`,category_id,brand_id,
        gallery,keywords,brief,is_on_sale,sort_order,pic_url,share_url,
        is_new,is_hot,unit,counter_price,retail_price,detail,add_time,
        update_time,deleted)
        values
        (#{goodsSn},#{name},#{categoryId},#{brandId},#{gallery},
        #{keywords},#{brief},#{isOnSale},#{sortOrder},#{picUrl},#{shareUrl},#{isNew},#{isHot},
        #{unit},#{counterPrice},#{retailPrice},#{detail},#{addTime},#{updateTime},#{deleted})
    </insert>

    <update id="update">
        update goods set
        goods_sn=#{goods.goodsSn},`name`=#{goods.name},category_id=#{goods.categoryId},
        brand_id=#{goods.brandId},gallery=#{goods.gallery},
        keywords=#{goods.keywords},
        brief=#{goods.brief},is_on_sale=#{goods.isOnSale},sort_order=#{goods.sortOrder},
        pic_url=#{goods.picUrl},share_url=#{goods.shareUrl},
        is_new=#{goods.isNew},is_hot=#{goods.isHot},unit=#{goods.unit},counter_price=#{goods.counterPrice},
        retail_price=#{goods.retailPrice},detail=#{goods.detail},add_time=#{goods.addTime},
        update_time=#{goods.updateTime},deleted=#{goods.deleted}
        where id=#{goods.id}

    </update>
    <delete id="delete">
        delete from goods
        where id = #{goods.id}
    </delete>

    <select id="getGoodsNum" resultType="int">
        select count(*) from goods
    </select>

    <select id="selectByExample" parameterType="com.cskaoyan.project.mall.domain.GoodsExample" resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List" />
        from goods
        <if test="_parameter != null">
            <include refid="Example_Where_Clause" />
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from goods
    where id = #{id,jdbcType=INTEGER}
  </delete>


</mapper>